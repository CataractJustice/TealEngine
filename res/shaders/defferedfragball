#version 330 core

layout (location = 0) out vec4 Unlit;
layout (location = 1) out vec4 FragColor;
layout (location = 2) out vec3 FragPosition;
layout (location = 3) out vec3 FragNormal;
layout (location = 4) out vec4 FragSpecular;

in vec2 TexCoord;
in vec3 FragPos;
in vec3 Normal;
in vec3 Tanget;
in vec3 CrossTanget;
in vec4 Color;
in vec3 CamPos;
uniform sampler2D tex;
uniform sampler2D specmap;
uniform sampler2D nmap;
uniform float time;
uniform vec4 color = vec4(1.0f);
uniform vec3 spec = vec3(1.0f);
uniform float normals = 1.0f;
void main()
{
	FragPosition = FragPos;
	vec4 ln = texture(nmap, TexCoord) * vec4(normals, 1.0f, normals, 1.0f) * 2.0 - 1.0;
	vec3 normal = normalize(Tanget * ln.x + Normal * ln.z - normalize(cross(Tanget, Normal)) * ln.y);
    	FragNormal = normal;
	FragColor = vec4(0.0f, 0.0f, 0.0f, 1.0f);
	Unlit = mix(texture(tex, TexCoord) * Color * color, vec4(1.0f, 0.0f, 1.0f, 1.0f), pow(1.0f - dot(normal, normalize(CamPos - FragPos)), 2.0f));
	vec4 specvec = texture(specmap, TexCoord);
	specvec.x *= spec.x;
	specvec.y *= spec.y;
	specvec.z *= spec.z;
	FragSpecular = specvec;
}