#version 330 core

layout (location = 1) out vec4 FragColor;
layout (location = 2) out vec3 FragPosition;
layout (location = 3) out vec3 FragNormal;
layout (location = 4) out vec4 FragSpecular;

in vec2 TexCoord;
in vec4 Color;
in vec3 FragPos;
in vec3 Normal;
uniform sampler2D tex;
uniform sampler2D nmap;
uniform sampler2D spec;
uniform float texScale;
uniform vec2 atlasScale;

void main()
{
	float w0 = pow(abs(dot(Normal, vec3(1.0f, 0.0f, 0.0f))),2.0f);
	float w1 = pow(abs(dot(Normal, vec3(0.0f, 1.0f, 0.0f))),2.0f);
	float w2 = pow(abs(dot(Normal, vec3(0.0f, 0.0f, 1.0f))),2.0f);

	vec2 UVx = (fract(FragPos.zy / texScale) + TexCoord) / atlasScale;
	vec2 UVy = (fract(FragPos.xz / texScale) + TexCoord) / atlasScale;
	vec2 UVz = (fract(FragPos.xy / texScale) + TexCoord) / atlasScale;
	
	vec3 n0 = texture(nmap, UVx).xyz * 2.0f - 1.0f;
	vec3 n1 = texture(nmap, UVy).xyz * 2.0f - 1.0f;
	vec3 n2 = texture(nmap, UVz).xyz * 2.0f - 1.0f;
	n0.z *= sign(Normal.x);
	n1.z *= sign(Normal.y);
	n2.z *= sign(Normal.z);
	
    FragColor = (
	texture(tex, UVx) * w0 + 
	texture(tex, UVy) * w1 + 
	texture(tex, UVz) * w2
	) * Color;
	
	FragPosition = FragPos;
	
	FragNormal = normalize(mix(Normal, 
	n0.zyx * w0 +
    n1.xzy * w1 +
    n2.xyz * w2
	, 0.48f));
	
	FragSpecular = texture(spec, vec2(0.0f));
}